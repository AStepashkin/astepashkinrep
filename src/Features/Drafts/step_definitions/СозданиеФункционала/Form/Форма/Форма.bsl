//начало текста модуля

#Область Служебные_функции_и_процедуры

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ПолученыТребованияОтЗаказчика()","ПолученыТребованияОтЗаказчика","Дано Получены требования от заказчика");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ПрочиталТребования()","ПрочиталТребования","Когда прочитал требования");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ПонялСутьЗадачи()","ПонялСутьЗадачи","И понял суть задачи");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯНачинаюВыбиратьСпособРеализации()","ЯНачинаюВыбиратьСпособРеализации","Тогда я начинаю выбирать способ реализации");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"СпособРеализацииВыбран()","СпособРеализацииВыбран","Когда Способ реализации выбран");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ПриступаюКРеализации()","ПриступаюКРеализации","Тогда Приступаю к реализации");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ФункционалРазработан()","ФункционалРазработан","Когда Функционал разработан");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"НеобходимыОбъектыСозданы()","НеобходимыОбъектыСозданы","И необходимы объекты созданы");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ПриступаюКТестированию()","ПриступаюКТестированию","Тогда приступаю к тестированию");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции

#КонецОбласти



#Область Работа_со_сценариями

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры

#КонецОбласти


///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Дано Получены требования от заказчика
//@ПолученыТребованияОтЗаказчика()
Процедура ПолученыТребованияОтЗаказчика() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	//ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//Когда прочитал требования
//@ПрочиталТребования()
Процедура ПрочиталТребования() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	//ВызватьИсключение "Ошибка";
КонецПроцедуры

&НаКлиенте
//И понял суть задачи
//@ПонялСутьЗадачи()
Процедура ПонялСутьЗадачи() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Ошибка";
КонецПроцедуры

&НаКлиенте
//Тогда я начинаю выбирать способ реализации
//@ЯНачинаюВыбиратьСпособРеализации()
Процедура ЯНачинаюВыбиратьСпособРеализации() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	//ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//Когда Способ реализации выбран
//@СпособРеализацииВыбран()
Процедура СпособРеализацииВыбран() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	//ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//Тогда Приступаю к реализации
//@ПриступаюКРеализации()
Процедура ПриступаюКРеализации() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//Когда Функционал разработан
//@ФункционалРазработан()
Процедура ФункционалРазработан() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//И необходимы объекты созданы
//@НеобходимыОбъектыСозданы()
Процедура НеобходимыОбъектыСозданы() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//Тогда приступаю к тестированию
//@ПриступаюКТестированию()
Процедура ПриступаюКТестированию() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

//окончание текста модуля